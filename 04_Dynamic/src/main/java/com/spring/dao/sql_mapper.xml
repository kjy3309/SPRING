<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.dao.MemberDAO">
	
	<!-- 파라메터가 기본 타입이 아닐 경우는 parameterType 지정 -->
	<!-- 만약 user_email 이 없으면 "없음" 으로 insert -->
	<insert id="join" parameterType="com.spring.dto.MemberDTO">
		INSERT INTO member(id, pw, name, age, gender, email)
			<if test="!email.equals('')">
				VALUES(#{id},#{pw},#{name},#{age},#{gender},#{email})
			</if>
			<if test="email.equals('')">
				VALUES(#{id},#{pw},#{name},#{age},#{gender},'없음')
			</if>
		
	</insert>
	
	<!-- 
	<choose>
		<when test="!user_email.equals('')">
		 ~~~~
		 </when>
		 <otherwise>
		 ~~~~~
		 </otherwise>
	</choose>
	 -->
	 
	 <!-- where 태그는 where 문이 바뀔 경우 사용하면 where 를 생략할 수 있다. -->
	 <!-- like 검색 시 % 는 문자열로 감싸져야 한다. -->
	 <!-- 그런데 문자열과 #{} 은 변수이기 때문에 문자열과 합쳐야 한다. -->
	 <!-- DB의 종류에 따라 문자열을 합치는 방식은 다르다. -->
	 <!-- 
	 [ORACLE]  '%'||#{keyword}||'%'
	 [MYSQL]   CONCAT('%',#{keyword},'%') 
	 [MS-SQL]  '%'+#{keyword}+'%'
	  -->
	  
	 
	 <select id="list" parameterType="hashMap" resultType="com.spring.dto.MemberDTO">
	 	SELECT * FROM member
	 	<where>
	 		<if test="!keyword.equals('') and opt == 'id'">id LIKE '%${keyword}%'</if>
	 		<if test="!keyword.equals('') and opt == 'name'">name LIKE '%'||#{keyword}||'%'</if>
	 		<if test="!keyword.equals('') and opt == 'email'">email LIKE '%'||#{keyword}||'%'</if>
	 	</where>
	 </select>
	 
	 <!-- 
	 	pw 만 : UPDATE member SET pw='11' WHERE id='test' 
	 	pw name 만 : UPDATE member SET pw='233', name='JungYeol Kim' WHERE id='test' 
	 	모두 : UPDATE member SET pw='pass123', name='123123', email='1123123123' WHERE id='test' 
	  -->
	  
	  <!--
	  	set 없이 if 만 사용할 경우 콤마(,) 에 의한 오류가 발생한다.
	   -->
	 
	 
	 <!-- 값이 있는 항목만 수정 -->
	 <update id="update" parameterType="hashMap">
	 	UPDATE member
	 	<set>
	 		<if test="!pw.equals('')">pw=#{pw},</if>
		 	<if test="!name.equals('')">name=#{name},</if>
		 	<if test="!email.equals('')">email=#{email}</if>
	 	</set>
	 	WHERE id=#{id}
	 </update>
	 
	 <!-- <select id="multi" parameterType="list" resultType="com.spring.dto.MemberDTO">
	 	SELECT * FROM member 
	 		WHERE 
	 			<foreach collection="list" item="item" separator="OR">
	 				name = #{item}
	 			</foreach>
	 </select> -->
	 
	 
	 <select id="multi" parameterType="list" resultType="com.spring.dto.MemberDTO">
	 	SELECT * FROM member WHERE name IN
	 	<foreach collection="list" item="item" open="(" separator="," close=")">
	 		#{item}
	 	</foreach>
	 </select>
	
</mapper>